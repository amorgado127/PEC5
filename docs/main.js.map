{"version":3,"sources":["./src/environments/environment.ts","./src/app/Components/cards/cards.component.html","./src/app/Components/cards/cards.component.ts","./src/app/services/magic.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/Components/card/card.component.html","./src/app/Components/card/card.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n    <h1>Cartas Magic: The Gathering</h1>\n    <ul class=\"list-group\">\n        <a *ngFor=\"let magicCard of magicCards\" [routerLink]=\"['/card',magicCard.id]\"\n            class=\"list-group-item list-group-item-action animate__animated animate_bounce animate__fadeIn\">\n            {{magicCard.printed_name}} - {{magicCard.printed_type_line}}\n        </a>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MagicService } from 'src/app/services/magic.service';\nimport { Magic } from 'src/app/models/magic.interface';\n\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.css']\n})\nexport class CardsComponent implements OnInit {\n\n  magicCards: Magic[];\n\n  constructor(private magicService: MagicService) { }\n\n  ngOnInit(): void {\n    this.magicService.getMagicCards().subscribe((cards) => {\n      this.magicCards = cards.data;\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cards } from 'src/app/models/cards.interface';\nimport { Magic } from 'src/app/models/magic.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MagicService {\n  private urlApi = \"https://api.scryfall.com/cards/\";\n  constructor(private httpClient: HttpClient) { }\n\n  getMagicCards(): Observable<Cards> {\n    return this.httpClient.get<Cards>(this.urlApi + \"search?q=lang:es\");\n  }\n\n  getMagicCard(id: string): Observable<Magic> {\n    return this.httpClient.get<Magic>(this.urlApi + id);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ejercicio1';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './Components/card/card.component';\nimport { CardsComponent } from './Components/cards/cards.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    CardsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {CardsComponent} from 'src/app/Components/cards/cards.component';\nimport {CardComponent} from 'src/app/Components/card/card.component';\n\nconst routes: Routes = [\n  { path: '', component: CardsComponent },\n  { path: 'card/:id', component: CardComponent },\n  { path: '**', component: CardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container mt-5\">\n\n    <div *ngIf=\"magicCard\" class=\"row animate__animated animate__bounce animate__fadeIn\">\n        <div class=\"col-mde-9\">\n            <p><strong>Nombre:</strong> {{magicCard.printed_name}}</p>\n            <p><strong>Tipo:</strong> {{magicCard.printed_type_line}}</p>\n            <p><strong>Set:</strong> {{magicCard.set_name}}</p>\n            <p><strong>Descripci√≥n:</strong> {{magicCard.printed_text}}</p>\n            <img style=\"width:488px; height:680px\" class=\"rounded\" src=\"{{magicCard.image_uris.normal}}\" alt=\"\">\n        </div>\n        <div class=\"col-md-3\">\n            <a class=\"btn btn-danger\" routerLink=\"/\">Back</a>\n        </div>\n\n    </div>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Magic } from 'src/app/models/magic.interface';\nimport { MagicService } from 'src/app/services/magic.service';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  magicCard:Magic;\n  \n  constructor(private magicService:MagicService,private activatedRoute: ActivatedRoute, private router: Router) { \n\n    \n  }\n\n\n  ngOnInit(): void {\n    const identifier = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log('Identifier--> ', identifier);\n    this.magicService.getMagicCard(identifier).subscribe((card) => {\n      if (!card) {\n        return this.router.navigateByUrl('/');\n      }\n      console.log(card);\n      this.magicCard = card;\n     console.log(this.magicCard);\n    });\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}